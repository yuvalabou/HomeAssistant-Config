##############################################
#               BINARY SENSORS               #
##############################################
# Binary sensor for checking if a device is online
#- platform: ping
#  host: !secret vacuum_host
#  name: 'Vacuum'
#  count: 5
#  scan_interval: 300
- platform: ping
  host: !secret laptop
  name: 'Laptop'
  count: 2
  scan_interval: 300
- platform: ping
  host: !secret nanopi_neo2
  name: 'NanoPi-NEO2'
  count: 2
  scan_interval: 300
- platform: ping
  host: !secret tv
  name: 'TV'
  count: 2
  scan_interval: 300
- platform: ping
  host: !secret printer
  name: 'Printer'
  count: 2
  scan_interval: 300
- platform: ping
  host: !secret rpi2
  name: 'Raspberry-Pi2'

# Random Boolean sensor
- platform: random
  name: 'Random Boolean'

# Time of Day sensor
- platform: tod
  name: 's'
  after: sunset
  before: sunrise
- platform: tod
  name: Day
  after: sunrise
  before: sunset

# Workday sensor
- platform: workday
  country: IL
  workdays:
    - sun
    - mon
    - tue
    - wed
    - thu
  excludes:
    - holiday

# Sensor for checking if someone is playing a game on steam right now
- platform: template
  sensors:
    steam_game_on:
      friendly_name: 'Is Steam Playing?'
      icon_template: mdi:steam
      value_template: >-
        {% if is_state('sensor.steam_game', 'None') %}
          False
        {% else %}
          True
        {% endif %}

# Shabat notification trigger
- platform: template
  sensors:
    shabat_notification_10m:
      friendly_name: 'Shabat 10 min Notification Trigger'
      value_template: >-
        {% set now = strptime(states('sensor.time'), '%H:%M') %}
        {% set now_min = now.hour * 60 + now.minute %}
        {% set then = strptime(states('sensor.upcoming_candle_lighting_formatted'), '%H:%M') %}
        {% set then_min = then.hour * 60 + then.minute %}
        {% set timediff = then_min - now_min %}
        {{ 0 <= timediff <= 10 }}
- platform: template
  sensors:
    shabat_notification_trigger_30m:
      friendly_name: 'Shabat Half hour Notification Trigger'
      value_template: >-
        {% set now = strptime(states('sensor.time'), '%H:%M') %}
        {% set now_min = now.hour * 60 + now.minute %}
        {% set then = strptime(states('sensor.upcoming_candle_lighting_formatted'), '%H:%M') %}
        {% set then_min = then.hour * 60 + then.minute %}
        {% set timediff = then_min - now_min %}
        {{ 0 <= timediff <= 30 }}

# Template Lights to show which lights are on
- platform: template
  sensors:
    master_bedroom_light_is_on:
      friendly_name: 'Master Bedroom Light'
      value_template: >-
        {{ is_state('light.master_bedroom', 'on') }}
      icon_template: >-
        {% if is_state('binary_sensor.living_room_lights_is_on', 'on') %}
          mdi:lightbulb
        {% else %}
          mdi:lightbulb-off
        {% endif %}
    living_room_light_is_on:
      friendly_name: 'Living Room Lights'
      value_template: >-
        {{ is_state('light.living_room_lights', 'on') }}
      icon_template: >-
        {% if is_state('binary_sensor.living_room_lights_is_on', 'on') %}
          mdi:lightbulb-group
        {% else %}
          mdi:lightbulb-group-off
        {% endif %}

###
# Jewish calendar
###
- platform: template
  sensors:
    is_fast_day:
      friendly_name: 'It is fast today'
      entity_id: sensor.date
      value_template: >-
        {{ state_attr('sensor.jewish_calendar_holiday', 'type_id') == '5' }}
      icon_template: >-
        {% if is_state('binary_sensor.is_fast_day', 'on') %}
          mdi:food-off
        {% else %}
          mdi:food
        {% endif %}

###
# Climate
###
- platform: template
  sensors:
    living_room_ac_is_on:
      friendly_name: 'Living Room AC'
      value_template: >-
        {% if is_state('climate.slvn', 'off') %}
          False
        {% else %}
          True
        {% endif %}
    master_bedroom_ac_is_on:
      friendly_name: 'Master Bedroom AC'
      value_template: >-
        {% if is_state('climate.shynh', 'off') %}
          False
        {% else %}
          True
        {% endif %}

- platform: threshold
  entity_id: sensor.master_bedroom_sensibo_temperature
  lower: 21
  upper: 25
  name: master_bedroom_temp_thres
- platform: threshold
  entity_id: sensor.living_room_temperature
  lower: 21
  upper: 25
  name: living_room_temp_thres