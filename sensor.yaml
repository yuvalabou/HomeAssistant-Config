##############################################
#                   SENSORS                  #
##############################################
# Date and Time
- platform: time_date
  display_options:
    - time
    - date
    - date_time
    - time_date

# Seasons sensor
- platform: season

# Uptime sensor
- platform: uptime
  name: 'Time Online'
  unit_of_measurement: hours
- platform: template
  sensors:
    uptime_friendly:
      friendly_name: 'Home Assistant Uptime'
      icon_template: mdi:home-assistant
      entity_id: sensor.time_online
      value_template: >-
        {% set uptime = states('sensor.time_online') | float(-1) %}
        {% if uptime >= 0 %}
          {% set time = (3600 * uptime) | int %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}
          {% if time < 60 %}
            {{ time }} seconds
          {% else %}
            {%- if days > 0 -%}
              {%- if days == 1 -%}
                1 day
              {%- else -%}
                {{ days }} days
              {%- endif -%}
            {%- endif -%}
            {%- if hours > 0 and days < 7 -%}
              {%- if days > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                1 hour
              {%- else -%}
                {{ hours }} hours
              {%- endif -%}
            {%- endif -%}
            {%- if days == 0 and minutes > 0 -%}
              {%- if hours > 0 -%}
                {{ ', ' }}{{ minutes }} min
              {%- else -%}
                {%- if minutes == 1 -%}
                  1 minute
                {%- else -%}
                  {{ minutes }} minutes
                {%- endif -%}
              {%- endif -%}
            {%- endif -%}
          {% endif %}
        {% else %}
          unknown
        {% endif %}

# External IP address
- platform: dnsip

# Random Number
- platform: random
  name: Random Number

# The version sensor platform that can display the current Home Assistant versions
- platform: version

###
# Jewish Calendar
###
# formatted times
- platform: template
  sensors:
    upcoming_candle_lighting_formatted:
      friendly_name: 'Upcoming Candle Lighting'
      entity_id: sensor.jewish_calendar_upcoming_candle_lighting
      value_template: >-
        {{ as_timestamp(states('sensor.jewish_calendar_upcoming_candle_lighting')) | timestamp_custom('%H:%M') }}
    upcoming_havdalah_formatted:
      friendly_name: 'Upcoming Havdalah'
      entity_id: sensor.jewish_calendar_upcoming_havdalah
      value_template: >-
        {{ as_timestamp(states('sensor.jewish_calendar_upcoming_havdalah')) | timestamp_custom('%H:%M') }}
###
# VACUUM
# Xiaomi vacuum sensors
#- platform: template
#  sensors:
#    vacuum_status:
#      friendly_name: Status
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'status') }}
#      icon_template: >-
#        {% set val =  states('vacuum.xiaomi_vacuum_cleaner', 'status')  %}
#        {% if val == 'Charging' %}
#          mdi:battery-charging
#        {% elif val == 'Cleaning' %}
#          mdi:move-resize
#        {% elif val == 'Returning home' %}
#          mdi:keyboard-return
#        {% elif val == 'Idle' %}
#          mdi:dots-horizontal
#        {% elif val == 'Paused' %}
#          mdi:pause-circle
#        {% else %}
#          mdi:help-circle
#        {% endif %}
#    vacuum_fan_speed:
#      friendly_name: Fan Speed
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'fan_speed') }}
#      icon_template: mdi:speedometer
#    vacuum_battery:
#      friendly_name: Vacuum Battery
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_level') }}
#      unit_of_measurement: '%'
#      icon_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_icon') }}
#    vacuum_cleaning_time:
#      friendly_name: Time of Last Cycle
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'cleaning_time') }}
#      icon_template: mdi:timer
#      unit_of_measurement: 'min'
#    vacuum_cleaned_area:
#      friendly_name: Area of Last Cycle
#      unit_of_measurement: 'm Â²'
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'cleaned_area') }}
#      icon_template: mdi:ruler
#    vacuum_cleanmainbrush:
#      friendly_name: Replace main brush
#      unit_of_measurement: 'h'
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'main_brush_left') }}
#      icon_template: mdi:screwdriver
#    vacuum_cleansidebrush:
#      friendly_name: Replace side brush
#      unit_of_measurement: 'h'
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'side_brush_left') }}
#      icon_template: mdi:screwdriver
#    vacuum_cleanfilter:
#      friendly_name: Replace filter
#      unit_of_measurement: 'h'
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'filter_left') }}
#      icon_template: mdi:screwdriver
#    vacuum_sensordirtyleft:
#      friendly_name: Clean sensor
#      unit_of_measurement: 'h'
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'sensor_dirty_left') }}
#      icon_template: mdi:broom
#    vacuum_last_cleaned:
#      friendly_name: Last cleaned
#      entity_id: vacuum.xiaomi_vacuum_cleaner
#      value_template: >-
#          {{ as_timestamp(state_attr('vacuum.xiaomi_vacuum_cleaner', 'clean_stop')) | timestamp_custom("%A, %H:%M", true) }}
#      icon_template: mdi:timetable

###
# Component Counters
###
- platform: template
  sensors:
    count_entities:
      friendly_name: 'Entities'
      entity_id: sensor.date
      value_template: >-
        {{ states | list | count }}
      icon_template: mdi:format-list-bulleted-square
    count_automations:
      friendly_name: 'Automations'
      entity_id: sensor.date
      value_template: >-
        {{ states.automation | list | count }}
      icon_template: mdi:autorenew
    count_scripts:
      friendly_name: 'Scripts'
      entity_id: sensor.date
      value_template: >-
        {{ states.script | list | count }}
      icon_template: mdi:script-text-outline
    count_device_trackers:
      friendly_name: 'Device Trackers'
      entity_id: sensor.date
      value_template: >-
        {{ states.device_tracker | list | count }}
      icon_template: mdi:map-marker
    count_binary_sensors:
      friendly_name: 'Binary Sensors'
      entity_id: sensor.date
      value_template: >-
        {{ states.binary_sensor | list | count }}
      icon_template: mdi:unfold-more-horizontal
    count_sensors:
      friendly_name: 'Sensors'
      entity_id: sensor.date
      value_template: >-
        {{ states.sensor | list | count }}
      icon_template: mdi:resistor
    count_switches:
      friendly_name: 'Switches'
      entity_id: sensor.date
      value_template: >-
        {{ states.switch | list | count }}
      icon_template: mdi:light-switch
    count_zones:
      friendly_name: 'Zones'
      entity_id: sensor.date
      value_template: >-
        {{ states.zone | list | count }}
      icon_template: mdi:map-marker-radius
    count_input_booleans:
      friendly_name: 'Input Boolean'
      entity_id: sensor.date
      value_template: >-
        {{ states.input_boolean | list | count }}
      icon_template: mdi:toggle-switch
    count_input_selects:
      friendly_name: 'Input Select'
      entity_id: sensor.date
      value_template: >-
        {{ states.input_select | list | count }}
      icon_template: mdi:view-list
    count_input_datetimes:
      friendly_name: 'Date\Time'
      entity_id: sensor.date
      value_template: >-
        {{ states.input_datetime | list | count }}
      icon_template: mdi:timetable
    count_timers:
      friendly_name: 'Timers'
      entity_id: sensor.date
      value_template: >-
        {{ states.timer | list | count }}
      icon_template: mdi:timer
    count_lights:
      friendly_name: 'Lights'
      entity_id: sensor.date
      value_template: >-
        {{ states.light | list | count }}
      icon_template: mdi:lightbulb-group
    count_climates:
      friendly_name: 'Climate'
      entity_id: sensor.date
      value_template: >-
        {{ states.climate | list | count }}
      icon_template: mdi:air-conditioner

# Package tracking
- platform: seventeentrack
  username: !secret 17track_user
  password: !secret 17track_passwd

# TV tracking
- platform: history_stats
  name: 'Track TV usage'
  entity_id: binary_sensor.tv
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    track_tv_usage_formatted:
      friendly_name: 'Formatted TV usage'
      entity_id: sensor.track_tv_usage
      value_template: >-
        {% set hours = states('sensor.track_tv_usage') | float %} 
        {% set minutes = ((hours % 1) * 60) | int %}  
        {% set hours = (hours - (hours % 1)) | int %}  
        {{ '%02i.%02i'%(hours, minutes) }}
      icon_template: mdi:timetable

###
# Steam
###
- platform: steam_online
  api_key: !secret steam_api
  accounts:
    - 76561198173612681

- platform: template
  sensors:
    steam_game:
      friendly_name: 'Steam Game'
      entity_id: sensor.steam_76561198173612681
      value_template: >-
        {{ state_attr('sensor.steam_76561198173612681', 'game') }}
      icon_template: mdi:gamepad-square-outline

- platform: history_stats
  name: 'Track Steam playtime'
  entity_id: binary_sensor.steam_game_on
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    track_steam_playtime_formatted:
      friendly_name: 'Formatted Steam playtime'
      entity_id: sensor.track_steam_playtime
      value_template: >-
        {% set hours = states('sensor.track_steam_playtime') | float %} 
        {% set minutes = ((hours % 1) * 60) | int %}  
        {% set hours = (hours - (hours % 1)) | int %}  
        {{ '%02i.%02i'%(hours, minutes) }}
      icon_template: mdi:timetable

###
# Electricity
###
#- platform: template
#  sensors:
#    total_power_consumption:
#      friendly_name: 'Total Power Consumption'
#      unit_of_measurement: kW
#      icon_template: mdi:counter
#      value_template: >-
#        {{ states('sensor.estimated_shabat_plate_electricity_consumption') }}
#
#- platform: history_stats
#  name: 'Shabat plate Is ON'
#  entity_id: binary_sensor.shabat_plate_is_on
#  state: 'on'
#  type: time
#  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
#  end: '{{ now() }}'
#- platform: template
#  sensors:
#    estimated_shabat_plate_electricity_consumption:
#      friendly_name: 'Estimated Shabat plate Electricity consumption'
#      icon_template: mdi:counter
#      unit_of_measurement: kW
#      value_template: >-
#        {{ (states('sensor.shabat_plate_is_on') | float) * 0.4 }}
#    realtime_shabat_plate_electricity_consumption:
#      friendly_name: 'Realtime Shabat plate Electricity consumption'
#      icon_template: mdi:counter
#      unit_of_measurement: W
#      value_template: >-
#        {% if is_state('binary_sensor.shabat_plate_is_on', 'on') %}
#          400
#        {%- else -%}
#          0
#        {%- endif -%}

#- platform: template
#  sensors:
#    estimated_electricity_price_daily:
#      friendly_name: 'Estimated Daily Electricity Price'
#      icon_template: mdi:currency-ils
#      value_template: >-
#        {{ (((states('var.electricity_price') | float) * (states('sensor.shabat_plate_total_energy_usage_daily') | float)) / 100) | round(2) }}
#    estimated_electricity_price_monthly:
#      friendly_name: 'Estimated Monthly Electricity Price'
#      icon_template: mdi:currency-ils
#      value_template: >-
#        {{ (((states('var.electricity_price') | float) * ((states('sensor.boiler_total_energy_usage_monthly') | float) + (states('sensor.shabat_plate_total_energy_usage_monthly')))) / 100) | round(2) }}

###
# SQL
###
- platform: sql
  db_url: !secret mariadb_address
  queries:
    - name: 'DB size'
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: MB

###
# PiHole
###
- platform: command_line
  name: 'PiHole Status'
  scan_interval: 20
  command: curl -X GET 'http://10.0.0.6/admin/api.php?status'
  value_template: >-
    {{ value_json.status }}

###
# WEATHER
###
# Outside temps
- platform: template
  sensors:
    outside_temps:
      friendly_name: 'Outside Temperature'
      unit_of_measurement: Â°C
      value_template: >-
        {{ state_attr('weather.home', 'temperature') | round }}
- platform: template
  sensors:
    accuweather_wind_speed:
      friendly_name: 'Wind speed'
      value_template: >-
        {{ state_attr('weather.home', 'wind_speed') | round }}
- platform: template
  sensors:
    wind_scale_friendly:
      friendly_name: 'Wind Scale'
      icon_template: >-
        {% set speed = (states('sensor.accuweather_wind_speed') | float(-1) * 3600 / 1000) %}
        {% if speed >= 75 %}
          mdi:weather-tornado
        {% elif speed >= 39 %}
          mdi:weather-windy
        {% elif speed >= 0 %}
          mdi:airballoon
        {% else %}
          mdi:cloud-question
        {% endif %}
      value_template: >-
        {% set speed = (states('sensor.accuweather_wind_speed') | float(-1) * 3600 / 1000) %}
        {% if speed >= 118 %}
          Hurricane force
        {% elif speed >= 103 %}
          Violent storm
        {% elif speed >= 89 %}
          Storm
        {% elif speed >= 75 %}
          Strong gale
        {% elif speed >= 62 %}
          Fresh gale
        {% elif speed >= 50 %}
          High wind
        {% elif speed >= 39 %}
          Strong breeze
        {% elif speed >= 29 %}
          Fresh breeze
        {% elif speed >= 20 %}
          Moderate breeze
        {% elif speed >= 12 %}
          Gentle breeze
        {% elif speed >= 6 %}
          Light breeze
        {% elif speed >= 1 %}
          Light air
        {% elif speed >= 0 %}
          Calm
        {% elif speed < 0 %}
          unknown
        {% endif %}

- platform: template
  sensors:
    uv_index_friendly:
      friendly_name: 'UV index'
      value_template: >-
        {% set index = (states('sensor.home_uv_index')) | int %}
        {% if index >= 11 %}
          Dangerous
        {% elif index >= 8 %}
          High risk
        {% elif index >= 6 %}
          Sunburn
        {% elif index >= 3 %}
          Sunglasses
        {% elif index >= 1 %}
          No risk
        {% elif index >= 0 %}
          No UV radiation
        {% elif index < 0 %}
          unknown
        {% endif %}
      icon_template: >-
        {% set index = (states('sensor.home_uv_index')) | int %}
        {% if index >= 11 %}
          mdi:close-octagon
        {% elif index >= 8 %}
          mdi:alert
        {% elif index >= 6 %}
          mdi:shield-sun
        {% elif index >= 3 %}
          mdi:sunglasses
        {% elif index >= 0 %}
          mdi:check-bold
        {% elif index < 0 %}
          mdi:eye
        {% endif %}

###
# Indoor Climate
###
- platform: template
  sensors:
    master_bedroom_sensibo_humidity:
      friendly_name: 'Master Bedroom Humidity'
      unit_of_measurement: '%'
      value_template: >-
        {{ state_attr('climate.shynh', 'current_humidity') }}
    master_bedroom_sensibo_temperature:
      friendly_name: 'Master Bedroom temperature'
      unit_of_measurement: 'Â°C'
      value_template: >-
        {{ state_attr('climate.shynh', 'current_temperature') }}

- platform: template
  sensors:
    living_room_climate_set_temp:
      friendly_name: 'Living Room Set Temperature'
      unit_of_measurement: 'Â°C'
      value_template: >-
        {{ state_attr('climate.slvn', 'temperature') }}
    master_bedroom_climate_set_temp:
      friendly_name: 'Master Bedroom Set Temperature'
      unit_of_measurement: 'Â°C'
      value_template: >-
        {{ state_attr('climate.shynh', 'temperature') }}

###
# Power calculations
# AC
- platform: template
  sensors:
    living_room_ac_power_consumption:
      friendly_name: 'Living room AC power consumption'
      unit_of_measurement: 'kW'
      value_template: >-
        {% if is_state('binary_sensor.living_room_ac_is_on', 'on') and
              is_state('climate.slvn', 'cool') %}
          2.04
        {% elif is_state('binary_sensor.living_room_ac_is_on', 'on') and
                is_state('climate.slvn', 'heat') %}%}
          2.317
        {% else %}
          0
        {% endif %}
    master_bedroom_ac_power_consumption:
      friendly_name: 'Master Bedroom AC power consumption'
      unit_of_measurement: 'kW'
      value_template: >-
        {% if is_state('binary_sensor.master_bedroom_ac_is_on', 'on') and
              is_state('climate.shynh', 'cool') %}
          0.8
        {% elif is_state('binary_sensor.master_bedroom_ac_is_on', 'on') and
                is_state('climate.shynh', 'heat') %}%}
          0.8
        {% else %}
          0
        {% endif %}
    total_ac_power_consumption:
      friendly_name: 'Total AC power consumption'
      unit_of_measurement: 'kW'
      value_template: >-
        {{ (states('sensor.living_room_ac_power_consumption') | float ) + (states('sensor.master_bedroom_ac_power_consumption') | float ) }}