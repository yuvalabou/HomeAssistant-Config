###########################################################
#                            Safe                         #
###########################################################
substitutions:
  devicename: safe
  upper_devicename: Safe

esphome:
  name: $devicename
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: !secret ssid
  password: !secret wifi_pass
  # Optional manual IP
  manual_ip:
    static_ip: 10.0.0.90
    gateway: 10.0.0.138
    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${upper_devicename} Fallback Hotspot
    password: !secret ap_pass

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_pass

ota:
  password: !secret ota_pass

# Code
time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  - platform: gpio
    pin:
      number: D5
      mode: INPUT_PULLUP
      inverted: false
    name: ${upper_devicename} State
    device_class: opening
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_state:
      - text_sensor.template.publish:
          id: last_opened
          state: !lambda |-
            char str[17];
            time_t currTime = id(homeassistant_time).now().time;
            strftime(str, sizeof(str), "%m-%d %H:%M", localtime(&currTime));
            return  { str };
  - platform: status
    name: ${upper_devicename} Connection

sensor:
  # WiFi sensor
  - platform: wifi_signal
    name: ${upper_devicename} WiFi reception
    update_interval: 60s
  - platform: adc
    pin: VCC
    name: ${devicename} VCC voltage
    
text_sensor:
  - platform: template
    name: ${upper_devicename} Last Opened
    id: last_opened

switch:
  - platform: gpio
    name: Unlock ${upper_devicename}
    icon: mdi:lock-open
    pin: D3
  - platform: restart
    name: Restart ${upper_devicename}
